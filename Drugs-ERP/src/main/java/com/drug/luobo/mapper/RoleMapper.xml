<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "mybatis-3-mapper.dtd" >
<mapper namespace="com.drug.luobo.mapper.RoleMapper">
   	<!-- 查询角色 -->
	<select id="queryAllRole" parameterType="RoleVo" resultType="Role">
		select * from role
		<where>
			<if test="rolename!=null and rolename!=''">
				and rolename like concat("%",#{rolename},"%")
			</if>
			<if test="roledesc!=null and roledesc!=''">
				and roledesc like concat("%",#{roledesc},"%")
			</if>
			<if test="available!=null">
				and available =#{available}
			</if>
		</where>
		ORDER BY roleid DESC LIMIT #{page},#{limit}
	</select>
	<select id="getCount" parameterType="RoleVo" resultType="Long">
	   select count(*) from role
		<where>
			<if test="rolename!=null and rolename!=''">
				and rolename like concat("%",#{rolename},"%")
			</if>
			<if test="roledesc!=null and roledesc!=''">
				and roledesc like concat("%",#{roledesc},"%")
			</if>
			<if test="available!=null">
				and available =#{available}
			</if>
		</where>
	
	</select>
	<insert id="insert" parameterType="Role">
		insert into role (
		rolename, roledesc,
		available)
		values (
		#{rolename,jdbcType=VARCHAR},
		#{roledesc,jdbcType=VARCHAR},
		#{available,jdbcType=INTEGER})
	</insert>
	<update id="update" parameterType="Role">
		update role
		<set>
			<if test="rolename != null">
				rolename = #{rolename,jdbcType=VARCHAR},
			</if>
			<if test="roledesc != null">
				roledesc = #{roledesc,jdbcType=VARCHAR},
			</if>
			<if test="available != null">
				available = #{available,jdbcType=INTEGER},
			</if>
		</set>
		where roleid = #{roleid,jdbcType=INTEGER}
	</update>
	<delete id="deleteRoleMenuByRid">
	       DELETE FROM menusrole WHERE roleid=#{rid}
	</delete>
	<insert id="insertRoleMenu">
		INSERT INTO menusrole VALUES(#{mid},#{rid})
	</insert>
	
	<update id="deleteRole" parameterType="Integer">
	   UPDATE role SET available=0 WHERE roleid=#{roleid}
	</update>
	<select id="checkRoleName" parameterType="Role" resultType="Role">
	    select * from role where rolename=#{rolename}
	</select>
	<select id="checkUpdateRoleName" parameterType="Role" resultType="Role">
	select * from role where rolename=#{rolename} and roleid not in (#{roleid})
	
	</select>
	
	
	
</mapper>
